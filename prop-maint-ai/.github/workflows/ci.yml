name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('server/requirements.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r server/requirements.txt

      - name: Run tests
        working-directory: server
        env:
          DATABASE_URL: sqlite:///./test.db
          ALLOW_OPEN_ADMIN_SIGNUP: 'true'
        run: pytest -q

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image (no push)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: prop-maint-ai:ci

  docker-publish:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub (optional)
        if: ${{ secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Prepare tags
        id: prep
        run: |
          OWNER_LC=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          GHCR_IMAGE="ghcr.io/${OWNER_LC}/prop-maint-ai"
          TAGS_GHCR="${GHCR_IMAGE}:sha-${GITHUB_SHA}"
          BRANCH="${GITHUB_REF##*/}"
          if [ "$BRANCH" = "main" ] || [ "$BRANCH" = "master" ]; then
            TAGS_GHCR+="\n${GHCR_IMAGE}:latest"
          fi
          echo "ghcr_image=${GHCR_IMAGE}" >> $GITHUB_OUTPUT
          echo "tags_ghcr<<EOF" >> $GITHUB_OUTPUT
          echo -e "$TAGS_GHCR" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          if [ -n "${{ secrets.DOCKERHUB_USERNAME }}" ]; then
            DH_IMAGE="docker.io/${{ secrets.DOCKERHUB_USERNAME }}/prop-maint-ai"
            TAGS_DH="${DH_IMAGE}:sha-${GITHUB_SHA}"
            if [ "$BRANCH" = "main" ] || [ "$BRANCH" = "master" ]; then
              TAGS_DH+="\n${DH_IMAGE}:latest"
            fi
            echo "dh_image=${DH_IMAGE}" >> $GITHUB_OUTPUT
            echo "tags_dh<<EOF" >> $GITHUB_OUTPUT
            echo -e "$TAGS_DH" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Build and push GHCR image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.prep.outputs.tags_ghcr }}

      - name: Build and push Docker Hub image (optional)
        if: ${{ steps.prep.outputs.tags_dh != '' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.prep.outputs.tags_dh }}